# This is a basic workflow to help you get started with Actions

name: create release

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
#   push:
#     branches: [ develop ]
#   pull_request:
#     branches: [ develop ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  framework: 'WireSyncEngine'
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-10.15

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: archive and create xcframework
        run: |
          carthage bootstrap --use-xcframeworks
          xcodebuild archive -project ./${{env.framework}}.xcodeproj -scheme ${{env.framework}} -configuration Release -destination 'generic/platform=iOS' -archivePath './${{env.framework}}.framework-iphoneos.xcarchive' SKIP_INSTALL=NO  BUILD_LIBRARY_FOR_DISTRIBUTION=YES
          xcodebuild archive -project ${{env.framework}}.xcodeproj -scheme ${{env.framework}} -configuration Release -destination 'generic/platform=iOS Simulator' -archivePath './${{env.framework}}.framework-iphonesimulator.xcarchive' SKIP_INSTALL=NO  BUILD_LIBRARY_FOR_DISTRIBUTION=YES
          xcodebuild -create-xcframework -framework './${{env.framework}}.framework-iphoneos.xcarchive/Products/Library/Frameworks/${{env.framework}}.framework' -framework './${{env.framework}}.framework-iphonesimulator.xcarchive/Products/Library/Frameworks/${{env.framework}}.framework' -output '../${{env.framework}}.xcframework'
